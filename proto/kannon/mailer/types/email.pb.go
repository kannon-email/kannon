// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: kannon/mailer/types/email.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmailToSend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmailId       string                 `protobuf:"bytes,1,opt,name=email_id,json=emailId,proto3" json:"email_id,omitempty"`
	From          string                 `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To            string                 `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	ReturnPath    string                 `protobuf:"bytes,4,opt,name=return_path,json=returnPath,proto3" json:"return_path,omitempty"`
	Body          []byte                 `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	ShouldRetry   bool                   `protobuf:"varint,6,opt,name=should_retry,json=shouldRetry,proto3" json:"should_retry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmailToSend) Reset() {
	*x = EmailToSend{}
	mi := &file_kannon_mailer_types_email_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmailToSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailToSend) ProtoMessage() {}

func (x *EmailToSend) ProtoReflect() protoreflect.Message {
	mi := &file_kannon_mailer_types_email_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailToSend.ProtoReflect.Descriptor instead.
func (*EmailToSend) Descriptor() ([]byte, []int) {
	return file_kannon_mailer_types_email_proto_rawDescGZIP(), []int{0}
}

func (x *EmailToSend) GetEmailId() string {
	if x != nil {
		return x.EmailId
	}
	return ""
}

func (x *EmailToSend) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *EmailToSend) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *EmailToSend) GetReturnPath() string {
	if x != nil {
		return x.ReturnPath
	}
	return ""
}

func (x *EmailToSend) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *EmailToSend) GetShouldRetry() bool {
	if x != nil {
		return x.ShouldRetry
	}
	return false
}

var File_kannon_mailer_types_email_proto protoreflect.FileDescriptor

const file_kannon_mailer_types_email_proto_rawDesc = "" +
	"\n" +
	"\x1fkannon/mailer/types/email.proto\x12\x17pkg.kannon.mailer.types\"\xa4\x01\n" +
	"\vEmailToSend\x12\x19\n" +
	"\bemail_id\x18\x01 \x01(\tR\aemailId\x12\x12\n" +
	"\x04from\x18\x02 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x03 \x01(\tR\x02to\x12\x1f\n" +
	"\vreturn_path\x18\x04 \x01(\tR\n" +
	"returnPath\x12\x12\n" +
	"\x04body\x18\x05 \x01(\fR\x04body\x12!\n" +
	"\fshould_retry\x18\x06 \x01(\bR\vshouldRetryB\xe3\x01\n" +
	"\x1bcom.pkg.kannon.mailer.typesB\n" +
	"EmailProtoP\x01Z8github.com/kannon-email/kannon/proto/kannon/mailer/types\xa2\x02\x04PKMT\xaa\x02\x17Pkg.Kannon.Mailer.Types\xca\x02\x17Pkg\\Kannon\\Mailer\\Types\xe2\x02#Pkg\\Kannon\\Mailer\\Types\\GPBMetadata\xea\x02\x1aPkg::Kannon::Mailer::Typesb\x06proto3"

var (
	file_kannon_mailer_types_email_proto_rawDescOnce sync.Once
	file_kannon_mailer_types_email_proto_rawDescData []byte
)

func file_kannon_mailer_types_email_proto_rawDescGZIP() []byte {
	file_kannon_mailer_types_email_proto_rawDescOnce.Do(func() {
		file_kannon_mailer_types_email_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kannon_mailer_types_email_proto_rawDesc), len(file_kannon_mailer_types_email_proto_rawDesc)))
	})
	return file_kannon_mailer_types_email_proto_rawDescData
}

var file_kannon_mailer_types_email_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_kannon_mailer_types_email_proto_goTypes = []any{
	(*EmailToSend)(nil), // 0: pkg.kannon.mailer.types.EmailToSend
}
var file_kannon_mailer_types_email_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_kannon_mailer_types_email_proto_init() }
func file_kannon_mailer_types_email_proto_init() {
	if File_kannon_mailer_types_email_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kannon_mailer_types_email_proto_rawDesc), len(file_kannon_mailer_types_email_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kannon_mailer_types_email_proto_goTypes,
		DependencyIndexes: file_kannon_mailer_types_email_proto_depIdxs,
		MessageInfos:      file_kannon_mailer_types_email_proto_msgTypes,
	}.Build()
	File_kannon_mailer_types_email_proto = out.File
	file_kannon_mailer_types_email_proto_goTypes = nil
	file_kannon_mailer_types_email_proto_depIdxs = nil
}
